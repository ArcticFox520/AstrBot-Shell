#!/bin/env bash
Path=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
source ${Path}/../Function/import

import log
import gitCR
import getFile
import getLocation
import returnError
source /etc/profile

# CFP: CustomPath
CFP="$(jq -r .CustomFolderPath ${Path}/../config.json)"
CFP="$(eval echo ${CFP})"
# TF: Target Folder
TF=$(echo ${CFP} | awk -F '/' '{print $NF}')
# TD: Target Directory
TD=$(echo ${CFP} | sed "s|/${TF}||g")
if [ ! -d ${TD} ]
then
  mkdir -p ${TD}
fi
cd ${TD}
log.info "正在克隆 AstrBot"
if gitCR clone master AstrBotDevs/AstrBot ${TF}
then
  log.success "克隆成功"
else
  log.error "克隆失败"
  exit 1
fi
cd ${TF}
gitCR release dist.zip AstrBotDevs/AstrBot dist.zip
if [ ! -d data ]
then
  mkdir data
fi
log.info "正在解压 面板文件"
size=$(unzip -l dist.zip | wc -l)
size=$(expr ${size} - 4)
if unzip dist.zip -d data/ | pv -l -s ${size} > /dev/null
then
  rm -rvf dist.zip
else
  log.error "解压失败"
  exit 1
fi
log.info "正在安装 依赖文件"
log.info "正在创建 虚拟环境"
if python3.10 -m venv ./venv
then
  log.success "创建成功"
else
  log.error "创建失败"
fi
source venv/bin/activate
pip install --upgrade pip
if python3.10 -m pip install -r requirements.txt
then
  log.success "依赖安装成功"
else
  log.error "依赖安装失败"
  exit 1
fi
deactivate